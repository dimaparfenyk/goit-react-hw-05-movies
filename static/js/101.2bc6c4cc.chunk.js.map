{"version":3,"file":"static/js/101.2bc6c4cc.chunk.js","mappings":"qNAEaA,EAAWC,EAAAA,GAAAA,GAAH,mKASRC,EAAkBD,EAAAA,GAAAA,IAAH,0CAIfE,EAAYF,EAAAA,GAAAA,EAAH,6C,SCXTG,EAAgB,SAAC,GAAwB,IAAtBC,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAEvC,OACI,SAAC,KAAD,CAAMC,MAAO,CACTC,eAAgB,OAChBC,SAAU,OACVC,MAAM,WACNC,GAAE,kBAAaP,GAJnB,UAMA,UAACL,EAAD,YAEI,gBAAKO,IAAKA,EAAKM,IAAI,GAAGC,MAAO,OAC7B,SAACZ,EAAD,WACA,SAACC,EAAD,UAAYG,QAHPD,IAQhB,E,UClBYU,EAAa,SAAC,GAAD,IAAEC,EAAF,EAAEA,OAAF,OACtB,2BACI,SAAC,IAAD,UACKA,EAAOC,KAAI,gBAAGZ,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOY,EAAd,EAAcA,YAAd,OACR,SAACd,EAAD,CAEJG,IAAG,0CAAqCW,GACxCZ,MAAOA,GAFFD,EAFO,OAHE,C,yGCFbc,EAAYlB,EAAAA,GAAAA,GAAH,2HAOTmB,EAAYnB,EAAAA,GAAAA,GAAH,qK,2JCPToB,EAAKpB,EAAAA,GAAAA,KAAD,0JAKd,IAMUqB,EAAWrB,EAAAA,GAAAA,MAAF,kLAUTsB,EAAatB,EAAAA,GAAAA,OAAH,mW,SCdR,SAASuB,IAAU,IAAD,EAC7B,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOT,EAAP,KAAeU,EAAf,KACA,GAAwCC,EAAAA,EAAAA,MAAxC,eAAOC,EAAP,KAAqBC,EAArB,KACMC,EAAS,UAAGF,EAAaG,IAAI,oBAApB,QAAkC,IAEjDC,EAAAA,EAAAA,YAAU,WACVC,QAAQC,IAAI,KACU,KAAdJ,IAEJK,EAAAA,EAAAA,GAAYL,GAAWM,MAAK,SAAAC,GACxBX,EAAUW,EAAMC,QACnB,GACJ,GAAE,CAACR,IAcJ,OACI,iCACI,UAACT,EAAD,CACIkB,UAAU,OACVC,SAfS,SAAAC,GAEjBA,EAAEC,iBAEF,IAAMC,EAAQF,EAAEG,cAAcC,SAASf,UAAUgB,MAC5B,KAAjBH,EAAMI,SAEVlB,EAAgB,CAAEC,UAAWa,IAC7BF,EAAEG,cAAcI,QACnB,EAIO,WAGI,SAAC1B,EAAD,CACIiB,UAAU,YACVU,KAAK,OACLC,KAAK,YACLC,YAAY,eACZC,aAAa,MAEjB,SAAC7B,EAAD,CACIgB,UAAU,aACVU,KAAK,SAFT,UAGI,SAAC,MAAD,UAGR,SAAClC,EAAA,EAAD,CAAYC,OAAQA,MAG/B,C,kICtDKqC,EAAM,gCACNC,EAAM,mCAGL,SAAgBC,IAAvB,4CAAQ,OAAR,oBAAQ,8FACMC,IAAAA,IAAA,UACRH,EADQ,uCAC0BC,IACpClB,MAAK,SAAAqB,GAAG,OAAIA,EAAIC,IAAR,IAHJ,0GAMD,SAAevB,EAAtB,+CAAO,OAAP,oBAAO,WAA2BQ,GAA3B,iFACQa,IAAAA,IAAA,UACRH,EADQ,gCACmBC,EADnB,6CAC2DX,IACrEP,MAAK,SAAAqB,GAAG,OAAIA,EAAIC,IAAR,IAHN,0G","sources":["components/MoviesItem/MoviesItem.styled.jsx","components/MoviesItem/Moviesitem.jsx","components/MoviesList/MoviesList.jsx","components/MoviesList/MoviesList.styled.jsx","pages/Pages.styled.jsx","pages/Movies.jsx","services/fetch.js"],"sourcesContent":["import styled from \"styled-components\"\n\nexport const FilmCard = styled.li`\ndisplay:flex;\nalign-items:center;\nflex-direction:column;\nmargin-right:30px;\nmargin-bottom:30px;\noverflow:hidden;\nborder-radius:8px;\n`\nexport const FilmDescription = styled.div`\n    width: 100%;\n`\n\nexport const FilmTitle = styled.p`\ntext-align: center;\n`","import React from \"react\";\nimport { Link} from 'react-router-dom';\nimport { FilmCard, FilmDescription, FilmTitle } from \"./MoviesItem.styled\";\n\nexport const MovieListItem = ({ id, title, src }) => {\n   \n    return (\n        <Link style={{\n            textDecoration: 'none',\n            fontSize: '24px',\n            color:'#684929'}}\n            to={`/movies/${id}`}\n        >\n        <FilmCard\n            key={id}>\n            <img src={src} alt='' width={320} />\n            <FilmDescription>\n            <FilmTitle>{title}</FilmTitle>\n            </FilmDescription>\n            </FilmCard>\n            </Link>\n        );\n};","import React from \"react\";\nimport { MovieListItem } from \"components/MoviesItem/Moviesitem\";\nimport { FilmsList } from \"./MoviesList.styled\";\n\nexport const MoviesList = ({movies}) =>(\n    <main>\n        <FilmsList>\n            {movies.map(({ id, title, poster_path }) =>\n                <MovieListItem\n            key={id}\n            src={`https://image.tmdb.org/t/p/w500/${poster_path}`}\n            title={title} \n            />\n        )}\n        </FilmsList>\n    </main>);\n\n","import styled from \"styled-components\";\n\nexport const PageTitle = styled.h1`\ntext-transform:uppercase;\n    text-align: center;\n    margin-top:40px;\n    margin-bottom:40px;\n`\n\nexport const FilmsList = styled.ul`\ndisplay:flex;\nflex-wrap: wrap;\njustify-content: center;\nflex-direction:row;\nmargin-right:-30px;\nmargin-bottom:-30px;\nlist-style: none;\n`\n\n","import styled from \"styled-components\";\n\nexport const Form=styled.form `\ndisplay: flex;\nalign-items: center;\nmargin: 40px auto;\nmax-width: 400px;\n ${'' /* background-color: #fff; */}\n  border-radius: 3px;\n  \n  overflow: hidden;\n`\n\nexport const FormInput =styled.input`\ndisplay: inline-block;\n\n  font: inherit;\n  font-size: 20px;\n  border:2px solid #ffb539;\n  margin-right:10px;\n  padding: 5px;\n  border-radius:8px;\n`\nexport const FormButton = styled.button`\ndisplay: inline-block;\n    width: 48px;\n    height: 48px;\n    border: 1px;\n    background-color:#f59f0f ;\n    border-radius: 50%;\n    opacity: 0.6;\n    transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1) 0s;\n    cursor: pointer;\n   \n    :hover{\n        background-color:#ffb539;\n        scale:1.02;\n    }\n`\n\n","import React, { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { FiSearch } from \"react-icons/fi\";\n\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { searchMovie } from 'services/fetch';\nimport { Form, FormInput, FormButton} from './Pages.styled'\n\nexport default function Movies() {\n    const [movies, setMovies] = useState([]);\n    const [searchParams, setSearchParams] = useSearchParams();\n    const movieName = searchParams.get('movieName')??'';\n\n    useEffect(() => {\n    console.log('1')\n        if (movieName === '') return;\n        \n        searchMovie(movieName).then(movie => {\n            setMovies(movie.results)\n        })\n    }, [movieName]);\n\n\n    const handleSubmit = e => {\n\n        e.preventDefault();\n\n        const query = e.currentTarget.children.movieName.value;\n        if (query.trim() === '') return;\n    \n        setSearchParams({ movieName: query});\n        e.currentTarget.reset();\n    };\n\n    return (\n        <>\n            <Form\n                className='Form'\n                onSubmit={handleSubmit}>\n                <FormInput\n                    className='formInput'\n                    type=\"text\"\n                    name='movieName'\n                    placeholder=\"Search movie\"\n                    defaultValue=\"\" \n                />\n                <FormButton\n                    className='formButton'\n                    type=\"submit\">\n                    <FiSearch />\n                </FormButton>\n            </Form> \n            <MoviesList movies={movies}/>\n        </>\n    );\n};","import axios from \"axios\";\n\nconst URL = 'https://api.themoviedb.org/3/'; \nconst KEY = '7ab62af97d9519a1533e4099d15ee467';\n  \n\nexport  async function getPopularMovies() {\n return await axios.get(\n   `${URL}/trending/movie/day?api_key=${KEY}`)\n   .then(res => res.data);\n};\n\nexport async function searchMovie(query) {\n  return await axios.get(\n    `${URL}search/movie?api_key=${KEY}&page=1&include_adult=false&query=${query}`)\n    .then(res => res.data)\n};"],"names":["FilmCard","styled","FilmDescription","FilmTitle","MovieListItem","id","title","src","style","textDecoration","fontSize","color","to","alt","width","MoviesList","movies","map","poster_path","PageTitle","FilmsList","Form","FormInput","FormButton","Movies","useState","setMovies","useSearchParams","searchParams","setSearchParams","movieName","get","useEffect","console","log","searchMovie","then","movie","results","className","onSubmit","e","preventDefault","query","currentTarget","children","value","trim","reset","type","name","placeholder","defaultValue","URL","KEY","getPopularMovies","axios","res","data"],"sourceRoot":""}